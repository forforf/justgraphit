
import History from './History';

// ToDo Needs testing

class Storage {

  constructor() {
    this.store = {};
    this.history = new History(2);
  }
  
  getAll() { return this.store; };

  getLabeledObject(storageObj) {
    const storageObjKeys = Object.keys(storageObj);
    const storageObjSize = storageObjKeys.length;
    if (storageObjSize !==1) {
      console.error('Expected a single stored object, but got ', storageObjSize);
    }
    const objName = storageObjKeys[0];
    const objData = storageObj[objName];
    return { name: objName, data: objData };
  }
  
  getLastKey() {
    return this.history.getLast();
  }

  // returns key and data
  getLastKeyValue() {
    let obj = {};
    const key = this.getLastKey();
    obj[key] = this.load(key);
    return obj;
  };

  
  isEmpty() {
    return Object.keys(this.store).length === 0;
  }

  load(key) {
    return this.store[key];
  };

  save(key, val) {
    this.updateHistory(key);
    this.store[key] = val;
    return key;
  };

  updateHistory(key) {
    if (key && key.length) {
      this.history.push(key);
    }
  }
}

export default Storage;
