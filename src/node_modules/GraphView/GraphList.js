
import React, { Component } from 'react';

class GraphList extends Component {

  constructor(props) {
    super(props);
    console.log('Graph List props', props);
    // this.persistFn = props.persistGraphObj;
    this.state = {allGraphs: props.allGraphs};

    // this.handleChange = this.handleChange.bind(this);
    // this.handleSubmit = this.handleSubmit.bind(this);
  }

  graphList() {
    const graphList = Object.keys(this.state.allGraphs).map((graphName, index) => {
      let idxString = "graphList-" + index;
      return (
        <li key={idxString}>
          {graphName}
        </li>
      )});
    return graphList;
  };

  // handleChange(event) {
  //   this.setState({value: event.target.value});
  // }
  //
  // handleSubmit(event) {
  //   console.log('A value was submitted: ' + this.state.value);
  //   this.updateGraph(this.state.value);
  //   event.preventDefault();
  // }
  //
  // updateGraph(newVal){
  //   // we don't set state here directly because we want to update the data store
  //   // and we'll let that action result in re-rendering the component
  //   let mutatingGraph = this.props.currentGraphObj.value;
  //   mutatingGraph.push({number: parseFloat(newVal), datetime: new Date().toISOString()});
  //   console.log('GraphInput updating graph' , mutatingGraph);
  //   this.persistFn(this.props.currentGraphObj.name, mutatingGraph);
  // }

  render() {
    return (
        <div className="GraphList">
          <h3>Graph List</h3>
          {this.graphList()}
        </div>
    );
  }
}


export default GraphList;