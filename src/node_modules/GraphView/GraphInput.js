
import React, { Component } from 'react';
import TextField from 'material-ui/TextField';
import RaisedButton from 'material-ui/RaisedButton';

class GraphInput extends Component {

  constructor(props) {
    super(props);
    this.updateGraphNow = props.updateGraphNow;
    this.getLabeledObject = props.getLabeledObject;
    this.state = {
      numberInput: '',
      nameInput: this.getLabeledObject(this.props.currentGraphObj).name
    };
    this.handleNumberInputChange = this.handleNumberInputChange.bind(this);
    this.handleNameInputChange = this.handleNameInputChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  // update graph name state if new props are received
  componentWillReceiveProps(nextProps) {
    let newGraphName = this.getGraphName(nextProps.currentGraphObj);
    if (this.state.nameInput !== newGraphName) {
      this.setState({nameInput: newGraphName});
    }
  }

  getGraphName= (graphObj) => {
    let graphObject = graphObj || this.props.currentGraphObj;
    return this.getLabeledObject(graphObject).name;
  };

  isNumeric(val) {
    // must be == (not ===)
    return Number(parseFloat(val))==val; //eslint-disable-line eqeqeq
  }

  handleEnterKey = (event) => {
    if(event.key === "Enter"){
      this.handleSubmit(event);
    }
  };

  handleNumberInputChange(event) {
    this.setState({numberInput: event.target.value});
  }

  handleNameInputChange(event) {
    this.setState({nameInput: event.target.value});
  }

  handleSubmit(event) {
    // TODO: Show error if no number was entered rather than ignoring
    if (this.isNumeric(this.state.numberInput)) {
      if(this.state.nameInput.length){
        this.updateGraphNow(this.state.nameInput, this.state.numberInput);
      }
    }
    event.preventDefault();
    this.setState({numberInput: ''});
  }

  render() {
    return (
        <div className="GraphInput">
          <div className="GraphInput-name">
            <h3>{this.getGraphName()}</h3>
          </div>
          <form onKeyPress={this.handleEnterKey}>
            <TextField
                hintText="Name your graph"
                value={this.state.nameInput}
                onChange={this.handleNameInputChange}
            /><br />
            <TextField
                type="number"
                hintText="Enter number to graph"
                value={this.state.numberInput}
                onChange={this.handleNumberInputChange}
            /><br />
            <RaisedButton label="Save" labelPosition="before" onClick={this.handleSubmit}>
            </RaisedButton>
          </form>
        </div>
    );
  }
}

export default GraphInput;
