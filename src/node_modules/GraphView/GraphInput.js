
import React, { Component } from 'react';

class GraphInput extends Component {

  constructor(props) {
    super(props);
    console.log('Graph Input props', props);
    this.persistFn = props.persistGraphObj;
    this.state = {value: ''};

    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleChange(event) {
    this.setState({value: event.target.value});
  }

  handleSubmit(event) {
    console.log('A value was submitted: ' + this.state.value);
    this.updateGraph(this.state.value);
    event.preventDefault();
  }

  updateGraph(newVal){
    // we don't set state here directly because we want to update the data store
    // and we'll let that action result in re-rendering the component
    let mutatingGraph = this.props.currentGraphObj.value;
    mutatingGraph.push({number: parseFloat(newVal), datetime: new Date().toISOString()});
    console.log('GraphInput updating graph' , mutatingGraph);
    this.persistFn(this.props.currentGraphObj.name, mutatingGraph);
  }
  // persistGraphObj(name, graphData) {
  //   this.storage.save(name, graphData);
  //   const currentGraphObj = this.storage.getLastKeyValue();
  //   this.setState({currentGraphObj: currentGraphObj});
  // }

  render() {
    return (
        <div className="GraphInput">
          <h3>Graph It</h3>
          <div className="GraphInput-name">
            <h5>{this.props.currentGraphObj.key}</h5>
          </div>
          <form onSubmit={this.handleSubmit}>
            <label>
              Number:
              <input type="text" value={this.state.value} onChange={this.handleChange} />
            </label>
            <input type="submit" value="Submit" />
          </form>

        </div>
    );
  }
}
//
// class NameForm extends React.Component {
//   constructor(props) {
//     super(props);
//     this.state = {value: ''};
//
//     this.handleChange = this.handleChange.bind(this);
//     this.handleSubmit = this.handleSubmit.bind(this);
//   }
//
//   handleChange(event) {
//     this.setState({value: event.target.value});
//   }
//
//   handleSubmit(event) {
//     alert('A name was submitted: ' + this.state.value);
//     event.preventDefault();
//   }
//
//   render() {
//     return (
//         <form onSubmit={this.handleSubmit}>
//           <label>
//             Name:
//             <input type="text" value={this.state.value} onChange={this.handleChange} />
//           </label>
//           <input type="submit" value="Submit" />
//         </form>
//     );
//   }
// }

export default GraphInput;