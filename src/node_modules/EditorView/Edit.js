
import React, { Component } from 'react';
import {cyan500, cyan100} from 'material-ui/styles/colors';
import ActionDelete from 'material-ui/svg-icons/action/delete';


import {Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn} from 'material-ui/Table';

class Edit extends Component {

  constructor(props) {
    super(props);
    this.deleteItem = this.deleteItem.bind(this);
    this.getLabeledObject = props.storage.getLabeledObject;
    this.state = {
      graphData: this.getGraphData()
    };
  }

  deleteItem = (index) => {
    const graphName = this.getGraphName();
    let graphData = this.getGraphData();
    const item = graphData[index];
    const itemStr = "value: " + item.number + ", date: " + item.datetime;
    if(confirm('Delete item: ' + itemStr)) {
      if (graphData.splice(index, 1)) {
        this.props.storage.save(graphName, graphData);
      }
      this.setState({graphData: this.getGraphData()});
    }
  };

  getGraphName = () => {
    // TODO: Validate just one exists
    return Object.keys(this.graphObj())[0];
  };

  getGraphData = () => {
    return this.graphObj()[this.getGraphName()];
  };

  graphObj = () => {
    return this.props.storage.getLastStorageObject() || {};
  };

  editListItems() {
    const graphData = (this.state && this.state.graphData) || [];

    const editList = graphData.map((dataItem, index) => {
        let style = {
          paddingLeft: "6em"
        };
        let idxString = "editList-" + index;
        return (
            <TableRow  key={idxString}>
              <TableRowColumn style={{paddingLeft: "4em"}} >{dataItem.datetime}</TableRowColumn>
              <TableRowColumn style={{paddingLeft: "6em"}} >{dataItem.number}</TableRowColumn>
              <TableRowColumn style={{paddingLeft: "4em"}}>
                <ActionDelete color={cyan500} hoverColor={cyan100} onClick={() => this.deleteItem(index)}/>
              </TableRowColumn>
            </TableRow>
        );
      });

    return editList;
  };

  tableWrapper() {
    return (
        <Table>
          <TableHeader displaySelectAll={false}>
            <TableRow>
              <TableHeaderColumn>Datetime</TableHeaderColumn>
              <TableHeaderColumn>Number</TableHeaderColumn>
              <TableHeaderColumn>Action</TableHeaderColumn>
            </TableRow>
          </TableHeader>
          <TableBody displayRowCheckbox={false}>
            {this.editListItems()}
          </TableBody>
        </Table>
    );
  }

  render() {
    return (
      <div className="Edit">
        <h3>{this.getLabeledObject(this.graphObj()).name}</h3>
        {this.tableWrapper()}
      </div>
    )
  }
}

export default Edit;